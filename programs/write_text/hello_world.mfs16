// ROW: 0xA0 (160)
ld DE,0xA0:d;
// Characters are 2 bytes/1 word wide, so only need to increment HL to move to the next
// character.

ld HL,0x0100_00A0:d;

call write_h;
call write_e;
call write_l;
call write_l;
call write_o;
call write_space;
call write_w;
call write_o;
call write_r;
call write_l;
call write_d;
call write_bang;

jp end_loop;


charline_top:
    sub HL,DE;
    sub HL,DE;
    sub HL,DE;
    sub HL,DE;
    sub HL,DE;
    ret;

write_h:
    call write_101; 
    call write_101; 
    call write_111;
    call write_101; 
    call write_101; 
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_e:
    call write_111;
    call write_100;
    call write_111;
    call write_100;
    call write_111;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_l:
    call write_100;
    call write_100;
    call write_100;
    call write_100;
    call write_111;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_o:
    call write_111;
    call write_101;
    call write_101;
    call write_101;
    call write_111;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_space:
    inc HL;
    inc HL;
    ret;

write_w:
    call write_101;
    call write_101;
    call write_111;
    call write_111;
    call write_010;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_r:
    call write_111;
    call write_101;
    call write_111;
    call write_110;
    call write_101;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_d:
    call write_110;
    call write_101;
    call write_101;
    call write_101;
    call write_110;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_bang:
    call write_010;
    call write_010;
    call write_010;
    call write_000;
    call write_010;
    inc HL;
    inc HL;
    call charline_top;
    ret;

write_000:
    ld A,0x0000:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_001:
    ld A,0x0F00:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_010:
    ld A,0xF000:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_011:
    ld A,0xFF00:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_100:
    ld A,0x000F:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_101:
    ld A,0x0F0F:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_110:
    ld A,0xF00F:w;
    ld [HL],A;
    add HL,DE;
    ret;

write_111:
    ld A,0xFF0F:w;
    ld [HL],A;
    add HL,DE;
    ret;

end_loop:
    halt;
    jp end_loop;
